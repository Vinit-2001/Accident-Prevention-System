Microchip MPLAB XC8 Compiler V1.41 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.41\dat\en_msgs.txt -cs \
  -h+dist/default/production\Mini_Project.X.production.sym \
  --cmf=dist/default/production\Mini_Project.X.production.cmf -z -Q16F877 \
  -oC:\Users\Vinit\AppData\Local\Temp\sd6k.2 \
  -Mdist/default/production/Mini_Project.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Vinit\AppData\Local\Temp\sd6k.obj \
  dist/default/production\Mini_Project.X.production.obj 

Object code version is 3.11

Machine type is 16F877



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Vinit\AppData\Local\Temp\sd6k.obj
                end_init                              0        0        3        0       0
dist/default/production\Mini_Project.X.production.obj
                cinit                               7FC      7FC        4      FF8       0
                text13                              679      679       2E      CF2       0
                text12                              58E      58E       1A      B1C       0
                text11                              6E9      6E9       4C      DD2       0
                text10                              5E4      5E4       23      BC8       0
                text9                               570      570        5      AE0       0
                text8                               5A8      5A8       1A      B50       0
                text7                               5C2      5C2       22      B84       0
                text6                               651      651       28      CA2       0
                text5                               575      575        5      AEA       0
                text4                               57A      57A       14      AF4       0
                text3                               735      735       C7      E6A       0
                text2                               607      607       25      C0E       0
                text1                               62C      62C       25      C58       0
                maintext                            6A7      6A7       42      D4E       0
                cstackCOMMON                         70       70        E       70       1
                strings                               3        3       7E        6       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7FC      7FC        4         0
                text13                              679      679       2E         0
                text12                              58E      58E       1A         0
                text11                              6E9      6E9       4C         0
                text10                              5E4      5E4       23         0
                text9                               570      570        5         0
                text8                               5A8      5A8       1A         0
                text7                               5C2      5C2       22         0
                text6                               651      651       28         0
                text5                               575      575        5         0
                text4                               57A      57A       14         0
                text3                               735      735       C7         0
                text2                               607      607       25         0
                text1                               62C      62C       25         0
                maintext                            6A7      6A7       42         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               3        3       7E         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                strings                        000003  00007E  000081         6       0  STRING      2
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text9                          000570  000005  000575       AE0       0  CODE        2
                text5                          000575  000005  00057A       AEA       0  CODE        2
                text4                          00057A  000014  00058E       AF4       0  CODE        2
                text12                         00058E  00001A  0005A8       B1C       0  CODE        2
                text8                          0005A8  00001A  0005C2       B50       0  CODE        2
                text7                          0005C2  000022  0005E4       B84       0  CODE        2
                text10                         0005E4  000023  000607       BC8       0  CODE        2
                text2                          000607  000025  00062C       C0E       0  CODE        2
                text1                          00062C  000025  000651       C58       0  CODE        2
                text6                          000651  000028  000679       CA2       0  CODE        2
                text13                         000679  00002E  0006A7       CF2       0  CODE        2
                maintext                       0006A7  000042  0006E9       D4E       0  CODE        2
                text11                         0006E9  00004C  000735       DD2       0  CODE        2
                text3                          000735  0000C7  0007FC       E6A       0  CODE        2
                cinit                          0007FC  000004  000800       FF8       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0020-006F             50           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0081-056F            4EF           2
                         0800-1FFF            800
        CONFIG           2007-2007              1           2
        CONST            0081-056F            100           2
                         0800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0081-056F            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0020-006F             50           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0081-056F            4EF           2
                         0800-1FFF           1800
        STRING           0081-056F            100           2
                         0800-1FFF            100

                                  Symbol Table

Lcd8_Cmd@a                  cstackCOMMON 0073
Lcd8_Port@a                 cstackCOMMON 0070
Lcd8_Set_Cursor@a           cstackCOMMON 0075
Lcd8_Set_Cursor@b           cstackCOMMON 0074
Lcd8_Write_Char@a           cstackCOMMON 0073
Lcd8_Write_String@a         cstackCOMMON 0076
Lcd8_Write_String@i         cstackCOMMON 0074
_ADCON1                     (abs)        009F
_Lcd8_Clear                 text5        0575
_Lcd8_Cmd                   text12       058E
_Lcd8_Init                  text11       06E9
_Lcd8_Port                  text13       0679
_Lcd8_Set_Cursor            text4        057A
_Lcd8_Shift_Left            text9        0570
_Lcd8_Write_Char            text8        05A8
_Lcd8_Write_String          text7        05C2
_RA0                        (abs)        0028
_RA1                        (abs)        0029
_RB6                        (abs)        0036
_RB7                        (abs)        0037
_RC0                        (abs)        0038
_RC1                        (abs)        0039
_RC2                        (abs)        003A
_RC3                        (abs)        003B
_RC4                        (abs)        003C
_RC5                        (abs)        003D
_RC6                        (abs)        003E
_RC7                        (abs)        003F
_RD0                        (abs)        0040
_RD1                        (abs)        0041
_RD2                        (abs)        0042
_RD3                        (abs)        0043
_RD4                        (abs)        0044
_TRISA0                     (abs)        0428
_TRISA1                     (abs)        0429
_TRISB                      (abs)        0086
_TRISC                      (abs)        0087
_TRISD                      (abs)        0088
__Habs1                     abs1         0000
__Hbank0                    bank0        0000
__Hbank1                    bank1        0000
__Hbank2                    bank2        0000
__Hbank3                    bank3        0000
__Hcinit                    cinit        0800
__Hclrtext                  clrtext      0000
__Hcode                     code         0000
__Hcommon                   common       0000
__Hconfig                   config       0000
__HcstackCOMMON             cstackCOMMON 0000
__Heeprom_data              eeprom_data  0000
__Hend_init                 end_init     0003
__Hfunctab                  functab      0000
__Hidloc                    idloc        0000
__Hinit                     init         0000
__Hintentry                 intentry     0000
__Hmaintext                 maintext     0000
__Hpowerup                  powerup      0000
__Hram                      ram          0000
__Hreset_vec                reset_vec    0000
__Hsfr0                     sfr0         0000
__Hsfr1                     sfr1         0000
__Hsfr2                     sfr2         0000
__Hsfr3                     sfr3         0000
__Hspace_0                  (abs)        0800
__Hspace_1                  (abs)        007E
__Hspace_2                  (abs)        0000
__Hspace_3                  (abs)        0000
__Hstack                    stack        0000
__Hstrings                  strings      0000
__Htext                     text         0000
__Labs1                     abs1         0000
__Lbank0                    bank0        0000
__Lbank1                    bank1        0000
__Lbank2                    bank2        0000
__Lbank3                    bank3        0000
__Lcinit                    cinit        07FC
__Lclrtext                  clrtext      0000
__Lcode                     code         0000
__Lcommon                   common       0000
__Lconfig                   config       0000
__LcstackCOMMON             cstackCOMMON 0000
__Leeprom_data              eeprom_data  0000
__Lend_init                 end_init     0000
__Lfunctab                  functab      0000
__Lidloc                    idloc        0000
__Linit                     init         0000
__Lintentry                 intentry     0000
__Lmaintext                 maintext     0000
__Lpowerup                  powerup      0000
__Lram                      ram          0000
__Lreset_vec                reset_vec    0000
__Lsfr0                     sfr0         0000
__Lsfr1                     sfr1         0000
__Lsfr2                     sfr2         0000
__Lsfr3                     sfr3         0000
__Lspace_0                  (abs)        0000
__Lspace_1                  (abs)        0000
__Lspace_2                  (abs)        0000
__Lspace_3                  (abs)        0000
__Lstack                    stack        0000
__Lstrings                  strings      0000
__Ltext                     text         0000
__S0                        (abs)        0800
__S1                        (abs)        007E
__S2                        (abs)        0000
__S3                        (abs)        0000
___int_sp                   stack        0000
___latbits                  (abs)        0002
___sp                       stack        0000
__end_of_Lcd8_Clear         text5        057A
__end_of_Lcd8_Cmd           text12       05A8
__end_of_Lcd8_Init          text11       0735
__end_of_Lcd8_Port          text13       06A7
__end_of_Lcd8_Set_Cursor    text4        058E
__end_of_Lcd8_Shift_Left    text9        0575
__end_of_Lcd8_Write_Char    text8        05C2
__end_of_Lcd8_Write_String  text7        05E4
__end_of__initialization    cinit        07FC
__end_of__stringtab         strings      0009
__end_of_buz                text10       0607
__end_of_lcd                text6        0679
__end_of_lcd_1              text3        07FC
__end_of_led                text2        062C
__end_of_main               maintext     06E9
__end_of_motor              text1        0651
__initialization            cinit        07FC
__pcstackCOMMON             cstackCOMMON 0070
__pmaintext                 maintext     06A7
__pstrings                  strings      0003
__ptext1                    text1        062C
__ptext10                   text10       05E4
__ptext11                   text11       06E9
__ptext12                   text12       058E
__ptext13                   text13       0679
__ptext2                    text2        0607
__ptext3                    text3        0735
__ptext4                    text4        057A
__ptext5                    text5        0575
__ptext6                    text6        0651
__ptext7                    text7        05C2
__ptext8                    text8        05A8
__ptext9                    text9        0570
__size_of_Lcd8_Clear        (abs)        0000
__size_of_Lcd8_Cmd          (abs)        0000
__size_of_Lcd8_Init         (abs)        0000
__size_of_Lcd8_Port         (abs)        0000
__size_of_Lcd8_Set_Cursor   (abs)        0000
__size_of_Lcd8_Shift_Left   (abs)        0000
__size_of_Lcd8_Write_Char   (abs)        0000
__size_of_Lcd8_Write_String (abs)        0000
__size_of_buz               (abs)        0000
__size_of_lcd               (abs)        0000
__size_of_lcd_1             (abs)        0000
__size_of_led               (abs)        0000
__size_of_main              (abs)        0000
__size_of_motor             (abs)        0000
__stringbase                strings      0008
__stringtab                 strings      0003
_buz                        text10       05E4
_lcd                        text6        0651
_lcd_1                      text3        0735
_led                        text2        0607
_main                       maintext     06A7
_motor                      text1        062C
btemp                       (abs)        007E
end_of_initialization       cinit        07FC
intlevel0                   functab      0000
intlevel1                   functab      0000
intlevel2                   functab      0000
intlevel3                   functab      0000
intlevel4                   functab      0000
intlevel5                   functab      0000
lcd@i                       cstackCOMMON 0079
reset_vec                   reset_vec    0000
stackhi                     (abs)        0000
stacklo                     (abs)        0000
start                       init         0000
start_initialization        cinit        07FC
wtemp0                      (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 31 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    0        int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd8_Clear
		_Lcd8_Init
		_Lcd8_Set_Cursor
		_buz
		_lcd
		_lcd_1
		_led
		_motor
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _motor *****************
 Defined at:
		line 64 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _led *****************
 Defined at:
		line 119 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_1 *****************
 Defined at:
		line 80 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd8_Clear
		_Lcd8_Set_Cursor
		_Lcd8_Write_String
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Set_Cursor *****************
 Defined at:
		line 67 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
 This function is called by:
		_main
		_lcd_1
 This function uses a non-reentrant model


 *************** function _Lcd8_Clear *****************
 Defined at:
		line 62 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   82[None  ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
 This function is called by:
		_main
		_lcd_1
 This function uses a non-reentrant model


 *************** function _lcd *****************
 Defined at:
		line 54 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    9[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd8_Shift_Left
		_Lcd8_Write_String
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Write_String *****************
 Defined at:
		line 102 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_9(17), STR_8(11), STR_7(17), STR_6(19), 
		 -> STR_5(17), STR_4(19), STR_3(15), STR_2(13), 
		 -> STR_1(26), 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] PTR unsigned char 
		 -> STR_9(17), STR_8(11), STR_7(17), STR_6(19), 
		 -> STR_5(17), STR_4(19), STR_3(15), STR_2(13), 
		 -> STR_1(26), 
  i               2    4[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Write_Char
 This function is called by:
		_lcd
		_lcd_1
 This function uses a non-reentrant model


 *************** function _Lcd8_Write_Char *****************
 Defined at:
		line 93 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd8_Port
 This function is called by:
		_Lcd8_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd8_Shift_Left *****************
 Defined at:
		line 114 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
 This function is called by:
		_lcd
 This function uses a non-reentrant model


 *************** function _buz *****************
 Defined at:
		line 136 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Init *****************
 Defined at:
		line 75 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
		_Lcd8_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Cmd *****************
 Defined at:
		line 53 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd8_Port
 This function is called by:
		_Lcd8_Clear
		_Lcd8_Set_Cursor
		_Lcd8_Init
		_Lcd8_Shift_Left
		_Lcd8_Shift_Right
 This function uses a non-reentrant model


 *************** function _Lcd8_Port *****************
 Defined at:
		line 11 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd8_Cmd
		_Lcd8_Init
		_Lcd8_Write_Char
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__stringtab    		STRING         	0003	0000	7
		__initialization		CODE           	07FC	0000	1

shared estimated size: 8

lcd.h
		_Lcd8_Write_String		CODE           	05C2	0000	35
		_Lcd8_Set_Cursor		CODE           	057A	0000	21
		_Lcd8_Shift_Left		CODE           	0570	0000	6
		_Lcd8_Init     		CODE           	06E9	0000	77
		_Lcd8_Port     		CODE           	0679	0000	47
		_Lcd8_Write_Char		CODE           	05A8	0000	27
		_Lcd8_Cmd      		CODE           	058E	0000	27
		_Lcd8_Clear    		CODE           	0575	0000	6

lcd.h estimated size: 246

main.c
		_lcd_1         		CODE           	0735	0000	200
		_main          		CODE           	06A7	0000	67
		_lcd           		CODE           	0651	0000	41
		_led           		CODE           	0607	0000	38
		_motor         		CODE           	062C	0000	38
		_buz           		CODE           	05E4	0000	36

main.c estimated size: 420

